---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: csi-driver-node
  namespace: {{ .Release.Namespace }}
  labels:
    node.gardener.cloud/critical-component: "true"
    app: csi
    role: disk-driver
spec:
  selector:
    matchLabels:
      app: csi
      role: disk-driver
  template:
    metadata:
      annotations:
        node.gardener.cloud/wait-for-csi-node-ironcore: {{ include "csi-driver-node.provisioner" . }}
      labels:
        node.gardener.cloud/critical-component: "true"
        app: csi
        role: disk-driver
    spec:
      hostNetwork: true
      priorityClassName: system-node-critical
      serviceAccount: csi-driver-node
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoExecute
        operator: Exists
      containers:
      - name: csi-driver
        securityContext:
          privileged: true
          capabilities:
            add: [ "SYS_ADMIN" ]
          allowPrivilegeEscalation: true
        image: {{ index .Values.images "csi-driver" }}
        env:
        - name: CSI_ENDPOINT
          value: unix:/{{ .Values.socketPath }}
        - name: X_CSI_MODE
          value: node
        - name: X_CSI_DEBUG
          value: "false"
        - name: APP_LOG_LEVEL
          value: "info"
        - name: X_CSI_SPEC_DISABLE_LEN_CHECK
          value: "true"
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
{{- if .Values.resources.driver }}
        resources:
{{ toYaml .Values.resources.driver | indent 10 }}
{{- end }}
        securityContext:
          privileged: true
        ports:
        - name: healthz
          containerPort: 9808
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
          initialDelaySeconds: 10
          timeoutSeconds: 3
          periodSeconds: 10
          failureThreshold: 5
        volumeMounts:
        - name: kubelet-dir
          mountPath: /var/lib/kubelet
          mountPropagation: "Bidirectional"
        - name: plugin-dir
          mountPath: /csi
        - name: device-dir
          mountPath: /dev

      - name: csi-node-driver-registrar
        image: {{ index .Values.images "csi-node-driver-registrar" }}
        args:
        - --csi-address=$(ADDRESS)
        - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
        - --v=5
        env:
        - name: ADDRESS
          value: {{ .Values.socketPath }}
        - name: DRIVER_REG_SOCK_PATH
          value: /var/lib/kubelet/plugins/{{ include "csi-driver-node.provisioner" . }}/csi.sock
{{- if .Values.resources.nodeDriverRegistrar }}
        resources:
{{ toYaml .Values.resources.nodeDriverRegistrar | indent 10 }}
{{- end }}
        volumeMounts:
        - name: plugin-dir
          mountPath: /csi
        - name: registration-dir
          mountPath: /registration

      - name: csi-liveness-probe
        image: {{ index .Values.images "csi-liveness-probe" }}
        args:
        - --csi-address={{ .Values.socketPath }}
{{- if .Values.resources.livenessProbe }}
        resources:
{{ toYaml .Values.resources.livenessProbe | indent 10 }}
{{- end }}
        volumeMounts:
        - name: plugin-dir
          mountPath: /csi

      volumes:
      - name: kubelet-dir
        hostPath:
          path: /var/lib/kubelet
          type: Directory
      - name: plugin-dir
        hostPath:
          path: /var/lib/kubelet/plugins/{{ include "csi-driver-node.provisioner" . }}/
          type: DirectoryOrCreate
      - name: registration-dir
        hostPath:
          path: /var/lib/kubelet/plugins_registry/
          type: Directory
      - name: device-dir
        hostPath:
          path: /dev
          type: Directory
